{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xd88Ca6856193Ea5cF462Ecd9eB5A630640dd8fac",
    "txHash": "0x6ea8007574650597cb5f733081b8154f815902615175806cd4686f268a078dd4"
  },
  "proxies": [
    {
      "address": "0x605c751738E533ac81ee051AeF7ded24C72d9a80",
      "txHash": "0xafdf9914fc469b8e38bebfc2d26f30f318e442a93365b371ba105b4895f5f410",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c8020e35275810c0ff678caaf51434503da96bfa7512ee2a27e9f3ffa032deb6": {
      "address": "0x8A73B7034C14c4fB617e17152900DD78A6a0c863",
      "txHash": "0x7368fedff10bc9059ffe6681c47f9827591bba8c40ae454ce3e8a8800d19cb5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "NFTMarket",
            "label": "_itemIds",
            "type": "t_struct(Counter)4908_storage",
            "src": "NFTMarket.sol:49"
          },
          {
            "contract": "NFTMarket",
            "label": "_itemsSold",
            "type": "t_struct(Counter)4908_storage",
            "src": "NFTMarket.sol:50"
          },
          {
            "contract": "NFTMarket",
            "label": "_itemsRemoved",
            "type": "t_struct(Counter)4908_storage",
            "src": "NFTMarket.sol:51"
          },
          {
            "contract": "NFTMarket",
            "label": "feeAddress",
            "type": "t_address",
            "src": "NFTMarket.sol:53"
          },
          {
            "contract": "NFTMarket",
            "label": "defaultFee",
            "type": "t_uint32",
            "src": "NFTMarket.sol:55"
          },
          {
            "contract": "NFTMarket",
            "label": "idToMarketItem",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)97_storage)",
            "src": "NFTMarket.sol:57"
          },
          {
            "contract": "NFTMarket",
            "label": "tokenIdToItemId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "NFTMarket.sol:58"
          },
          {
            "contract": "NFTMarket",
            "label": "registrations",
            "type": "t_mapping(t_address,t_array(t_struct(Plan)125_storage)dyn_storage)",
            "src": "NFTMarket.sol:59"
          }
        ],
        "types": {
          "t_struct(Counter)4908_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)97_storage)": {
            "label": "mapping(uint256 => struct NFTMarket.MarketItem)"
          },
          "t_struct(MarketItem)97_storage": {
            "label": "struct NFTMarket.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256"
              },
              {
                "label": "nftContract",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "offeror",
                "type": "t_address"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "isAuction",
                "type": "t_bool"
              },
              {
                "label": "isPublisher",
                "type": "t_bool"
              },
              {
                "label": "minimumOffer",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "bidder",
                "type": "t_address"
              },
              {
                "label": "lockedBid",
                "type": "t_uint256"
              },
              {
                "label": "invitedBidder",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_array(t_struct(Plan)125_storage)dyn_storage)": {
            "label": "mapping(address => struct NFTMarket.Plan[])"
          },
          "t_array(t_struct(Plan)125_storage)dyn_storage": {
            "label": "struct NFTMarket.Plan[]"
          },
          "t_struct(Plan)125_storage": {
            "label": "struct NFTMarket.Plan",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "endDate",
                "type": "t_uint256"
              },
              {
                "label": "currency",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
